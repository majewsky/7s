// Code generated by go-bindata. DO NOT EDIT.
// sources:
// static/audience.css
// static/audience.js
// static/presenter.css
// static/presenter.js
// static/slides.css
// static/slides.js

package main


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}


type asset struct {
	bytes []byte
	info  fileInfoEx
}

type fileInfoEx interface {
	os.FileInfo
	MD5Checksum() string
}

type bindataFileInfo struct {
	name        string
	size        int64
	mode        os.FileMode
	modTime     time.Time
	md5checksum string
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) MD5Checksum() string {
	return fi.md5checksum
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bindataStaticAudiencecss = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xcd\x6a\xc3\x30\x10\x84\xef\x7e\x8a\x85\xdc\x42\x4c\x6c\x0a\x3d" +
	"\xc8\xf4\x61\x64\x69\x2d\x2d\xd1\x1f\xab\x4d\x1d\xb7\xf4\xdd\x8b\xec\x5e\xda\x42\x8e\x33\x87\xf9\xbe\xf1\x12\xc3" +
	"\x05\xe6\x6c\x37\xf8\xec\x00\xa2\x66\x47\x49\xc1\x30\x75\x00\x45\x5b\x4b\xc9\xfd\xa4\x25\x27\xe9\x2b\x7d\xa0\x82" +
	"\xf1\xb5\x3c\x26\xb8\x9e\xe1\x0d\x46\xc6\x08\xe7\x6b\xf7\xd5\x75\xe5\x94\x72\x35\x4c\x45\x2e\x40\x0b\xeb\x88\x27" +
	"\x73\x67\xde\x77\x2d\xd5\x12\xf4\xa6\x60\x0e\xd9\xdc\xda\xdc\x4a\x56\xbc\x82\x71\x18\xde\xd7\x96\x3d\x92\xf3\x72" +
	"\x14\x7e\x7a\xae\x32\x67\xb6\xc8\x7b\xf8\xc5\xdd\x51\xb3\x36\x37\xc7\xf9\x9e\x6c\xa3\xe9\x83\x16\x28\x61\xff\x0f" +
	"\xb1\x5f\x5a\x74\xa4\xb0\x29\xa8\x3a\xd5\xbe\x22\xd3\xf2\xe7\xed\xcb\x21\x28\xf8\x90\x5e\x07\x72\x49\x81\xc1\x24" +
	"\xc8\xad\x35\x39\x64\x56\xb0\x7a\x12\x6c\x36\xdf\x01\x00\x00\xff\xff\xb9\xd1\x98\x12\x50\x01\x00\x00")

func bindataStaticAudiencecssBytes() ([]byte, error) {
	return bindataRead(
		_bindataStaticAudiencecss,
		"static/audience.css",
	)
}



func bindataStaticAudiencecss() (*asset, error) {
	bytes, err := bindataStaticAudiencecssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "static/audience.css",
		size: 336,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1527267862, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataStaticAudiencejs = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x94\x5f\x6f\xd3\x30\x14\xc5\xdf\xfb\x29\xce\x8c\xb4\x25\x5a\x49\xa7" +
	"\xbd\x96\x80\xc4\x98\x46\xd1\x18\x12\x1b\x12\x12\x42\xc8\x8b\x6f\x5b\x4b\xa9\x9d\xda\x37\xfd\x23\xd4\xef\x8e\x1c" +
	"\x27\x6d\x04\xa5\x82\x97\xcd\x49\x7d\xcf\xfd\x9d\x73\xed\x24\xd3\xda\x14\xac\xad\x49\x52\xfc\x1c\x0c\x80\xd1\xc8" +
	"\xd1\xc2\xae\x08\xc6\xfa\xc2\xe9\x8a\xa1\x8d\xd2\x85\x64\xeb\x06\xc0\x4a\x3a\x18\xff\x60\x15\x21\x87\xb2\x45\xbd" +
	"\x20\xc3\xd9\x8c\xf8\xb6\xa4\xb0\x7c\xbb\x9d\xa8\x44\x74\xa5\x22\x1d\x0f\x00\x3d\x45\x12\x6b\x42\x0b\x00\xad\x42" +
	"\x56\x49\x47\x86\x9b\x65\xec\x79\x33\xd7\xa5\xea\xf6\x86\xd2\x5d\x24\x92\x4a\xe1\x95\x9e\x3a\xb9\xa0\xd7\xe0\xb9" +
	"\x64\x28\xed\xab\x52\x6e\x3d\x78\x4e\x28\x6a\x17\x84\xe0\x4b\xad\xa8\x85\x8c\xbb\xfb\x90\x85\x23\xc9\xd4\x72\x26" +
	"\x22\x6e\xe8\x08\xc3\x3a\xd3\x0a\x39\x44\x50\x13\xe1\xed\xbe\x72\x59\x93\xdb\x3e\x52\x49\x05\x5b\x97\x88\x67\xab" +
	"\xb6\x22\xcd\x64\x55\x91\x51\x11\x39\x0a\xa4\xe3\x41\xdb\xdd\x13\xdf\x44\xa8\xc7\xc0\x34\x31\x5f\x26\xc8\xb1\x8f" +
	"\x5a\xab\x4d\x17\xc5\xdf\x9a\x44\xc5\x17\x0d\x4c\x9a\x15\xd6\x30\x19\x7e\xd7\x6d\x2e\x6d\x21\x83\x52\x36\x77\x34" +
	"\x45\x8e\x8b\x51\xe3\xdd\x8f\x2e\x70\x89\x20\x8f\x4b\x5c\x35\xd6\x80\xb5\x36\xca\xae\xb3\xa2\xc7\x83\x1c\x5a\x6d" +
	"\x9a\x80\xc3\x9f\x23\xb4\xc9\x91\xaa\x68\x6f\x34\x2a\xad\x99\xbd\xac\x6c\x59\xa2\xb4\xb6\x8a\xf3\x90\x6a\x25\x4d" +
	"\x41\x61\x1e\xce\xd6\xb3\x79\x33\x97\xc8\x04\xe9\xbb\x23\x44\x0a\xcf\xdb\xf8\x13\xb9\x15\x75\x07\x2a\x68\x05\x8e" +
	"\x46\xb3\x17\x53\x97\x51\xd8\xe3\x68\x89\x1c\x86\xd6\xf8\xfa\xf1\xfe\x3d\x73\xf5\x99\x96\x35\x79\x4e\x5a\x97\x8e" +
	"\x96\x99\x54\xea\x76\x45\x86\xef\xb5\x67\x32\xe4\x12\x41\xce\x59\x27\x86\x7f\x4a\x02\x85\x35\xde\x96\x94\x95\x76" +
	"\x96\x88\xbb\xdb\x27\x8c\x8c\x65\x3d\xdd\x62\x2a\x75\x49\x6a\x08\x47\x9e\xa5\x63\x6d\x66\xd0\x06\xd7\xf0\x54\x58" +
	"\xa3\x7c\x96\x65\xa2\xed\xd9\x24\xf7\xa4\x17\x64\x6b\x4e\x02\xfc\x10\xd7\x57\x57\x5d\xee\xbb\x93\x64\xf2\xd9\x3a" +
	"\xfe\x4f\xb2\xa6\x86\xd4\x19\xee\xf4\x2a\x60\xd5\xd5\x1e\xe5\x74\xb3\xd2\x4a\xd5\xef\x45\x87\x66\xe1\x72\x52\xc6" +
	"\xd2\xcd\x88\x33\xcf\x92\x6b\x8f\xb3\x3c\x0f\x46\x0e\x9b\x4e\x30\x39\xe2\xda\x19\x52\x68\xa2\x46\x54\xf8\xb7\xf0" +
	"\x4e\xc7\x17\xdd\x04\xf1\xee\x79\xd7\xfe\x6f\xbe\x41\xb4\x9e\xa8\x0d\x72\x7c\x78\xfc\xf4\x10\x3e\x24\x9e\x0e\x36" +
	"\x1c\xf9\xca\x1a\x4f\x4f\xb4\xe1\xf4\x9b\x68\xcf\xf0\x8f\xe6\x38\x8a\xef\xe3\x9e\xf3\x56\x26\x18\xae\x8d\xa2\xa9" +
	"\x0e\x4e\xce\xcf\xd1\x7b\x7f\xec\x22\xf4\x82\x39\x76\x77\x62\x75\xfa\x3b\x77\xb0\x98\xf4\xe6\xb5\x1f\x98\xad\xc8" +
	"\x34\xa9\x8a\x21\x44\x1b\xec\x9b\xb6\x61\x2e\x70\x79\x94\xe1\x30\x6f\x4f\x46\x45\xdd\x5d\x77\x8b\xc2\xe3\x60\x97" +
	"\xa4\xe9\x78\xf0\x2b\x00\x00\xff\xff\xa1\x7b\x53\x08\xe1\x05\x00\x00")

func bindataStaticAudiencejsBytes() ([]byte, error) {
	return bindataRead(
		_bindataStaticAudiencejs,
		"static/audience.js",
	)
}



func bindataStaticAudiencejs() (*asset, error) {
	bytes, err := bindataStaticAudiencejsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "static/audience.js",
		size: 1505,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1527268497, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataStaticPresentercss = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\xcf\x6e\xe2\x30\x10\xc6\xef\x7e\x8a\x91\xb8\xec\xb2\xcb\x42\x22" +
	"\xc1\xc1\x68\x4f\xc0\x83\xf8\x5f\x12\x0b\xc7\x63\x39\x93\x00\xad\x78\xf7\x2a\x26\xa5\x09\xa8\x55\x7b\x1c\xfb\xfb" +
	"\xcd\xcc\xf7\x4d\x45\xb5\x83\x57\x06\x50\x8b\x58\x5a\xcf\x61\xb5\x65\x00\x41\x68\x6d\x7d\x39\x54\x05\x7a\x5a\x34" +
	"\xf6\xc5\x70\xc8\x36\xe1\xbc\x85\xe5\x1c\xfe\x43\x16\x4d\x0d\xf3\x25\xbb\x32\x89\xfa\xf2\x75\x8f\x2b\x63\xb6\x88" +
	"\xa2\x36\xcf\x32\x89\x51\x9b\xc8\x21\x0b\x67\x68\xd0\x59\x0d\xd2\x09\x75\x7c\xde\x22\x60\x63\xc9\xa2\xe7\x20\x64" +
	"\x83\xae\x25\xd3\xbf\x12\x06\x9e\x56\x19\x0d\x99\x85\x68\xba\x34\xc9\x99\x82\x38\x64\xdd\xa9\x97\x9e\xac\xa6\x8a" +
	"\x43\xbe\xba\x95\x95\xb1\x65\x45\xa9\xae\x7a\x78\x60\x55\x1b\xe3\x88\xcd\xf3\x09\xbc\xde\x4c\xe1\xf5\x66\x02\x7b" +
	"\x73\xa6\x04\xc7\xdb\xf7\xf7\x26\x33\xd9\x12\xa1\x4f\xa0\xb6\x4d\x70\xe2\xc2\x41\x3a\x1c\x52\xf8\xdc\xb7\x12\x4e" +
	"\xfd\xea\x57\x80\x3f\x90\x47\x53\xff\xde\xfe\x20\xdd\x87\xa5\x3e\xc2\x86\xd5\xbf\x75\x0a\x14\x40\x0a\x75\x2c\x23" +
	"\xb6\x5e\x73\x98\x1d\x0e\x87\xfe\xcd\x59\x6f\x16\x77\x0b\x83\x70\xd2\xec\xee\x88\x57\xd8\x99\xf8\x17\x86\xaa\x40" +
	"\xd5\x36\xc9\xe5\xa4\xef\x7e\xbf\xef\x99\x41\x24\x14\xd9\xce\x3c\xab\x76\xbb\xdd\xa8\xf3\x4c\x92\x5f\x3c\x9c\xf9" +
	"\x76\xaa\xeb\x58\xf1\x78\x8f\x77\xc9\x5b\x00\x00\x00\xff\xff\xba\x1b\xe5\x98\xf6\x02\x00\x00")

func bindataStaticPresentercssBytes() ([]byte, error) {
	return bindataRead(
		_bindataStaticPresentercss,
		"static/presenter.css",
	)
}



func bindataStaticPresentercss() (*asset, error) {
	bytes, err := bindataStaticPresentercssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "static/presenter.css",
		size: 758,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1527266510, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataStaticPresenterjs = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\x4f\x6f\xd3\x40\x10\xc5\xef\xf9\x14\x83\x7b\xc8\x46\x69\x5c\x38" +
	"\x47\x16\x07\x40\x22\xa8\x10\x84\x8b\x84\x84\x10\x72\x77\xc7\xed\x0a\x67\xd6\x99\x1d\x27\x46\xc8\xdf\x1d\xad\xff" +
	"\xa5\x07\x47\x8a\xaa\x9e\xf6\x32\xf3\x7e\x33\xef\xcd\xaa\xbc\x22\x2d\xd6\x91\x5a\xc0\xbf\xd9\x0c\xe0\x90\x31\x78" +
	"\x94\x77\x15\x33\x92\xa4\x85\x35\xb8\xa1\xef\x1b\x48\x60\xac\xb4\xa6\x0e\xc5\x00\x00\xc6\xe9\x6a\x87\x24\xf1\xbe" +
	"\x42\xfe\x9b\x62\x81\x5a\x1c\xab\xc8\xe6\x9c\xed\xf0\xaa\x64\x3c\x44\x8b\x58\x3b\x12\x24\x79\x3f\x14\x17\x4e\x67" +
	"\x41\x29\x7e\x64\xcc\x21\x81\xf9\x8d\x0f\x1c\x7f\x33\x87\x25\x04\x79\x58\xc1\x9b\xc5\xfa\x12\x82\xae\x98\x9f\x45" +
	"\x58\xc2\xeb\xcb\x08\x84\xb5\x3c\x93\x10\x76\x68\x11\x47\x4b\xc6\x1d\x63\xfd\xc4\x54\x48\xc0\x9a\x3a\x4c\xd0\xb4" +
	"\x45\x13\x9e\xab\x89\xb6\x4e\x71\x22\xa4\x2d\xa5\xc8\x07\xe4\x33\x41\x85\x0e\xc6\x3d\x24\x40\x78\x84\x1f\x9f\x6f" +
	"\x3f\x8a\x94\xdf\x70\x5f\xa1\x17\xd5\x1b\xc1\xb8\x8f\x33\x63\x3e\x1c\x90\xe4\xd6\x7a\x41\x42\x56\x51\xe1\x32\x13" +
	"\x5d\x9f\x44\x71\x90\x04\xd0\x8e\xbc\x2b\x30\x2e\xdc\x83\xc2\x58\x32\x7e\x40\x89\x19\x7d\xe9\xc8\xe3\x1d\xd6\xd2" +
	"\x0b\x77\x78\xc2\xe3\xc6\xd4\x90\xc0\xa7\x74\xfb\x25\x2e\x33\xf6\x78\xa6\xeb\x67\xd4\xaf\xfc\xbb\xf5\x34\xfa\x35" +
	"\xc8\xd8\x1c\x54\x2f\xf3\x2a\x49\xa0\x22\x83\xb9\x25\x34\xa7\x91\xa6\x8d\xec\x7a\xc6\x69\x9a\xf6\x6d\x86\x74\xc2" +
	"\xde\xae\x44\x52\xd1\xd7\x6d\x7a\x17\x5d\x9f\x2e\x62\x0c\xb9\xcc\xe4\x91\xb2\x1d\xc2\x12\xe6\x6f\x3d\xca\xaa\x1d" +
	"\x2c\x09\x59\xdb\x51\x38\xe8\x78\x24\xd3\xf9\xd9\xc5\x7a\xee\xb8\xee\x2b\x11\x47\x57\xf7\x42\xab\xfe\x93\x38\xd2" +
	"\x85\xd5\x7f\x9e\xe6\x37\xac\x75\x26\xea\xa9\xfb\x18\x7f\x4e\xb3\xbe\x8c\xde\x9f\xf7\x0b\xd1\x97\x27\xfa\xac\x51" +
	"\x8b\xc5\x7a\xf6\x3f\x00\x00\xff\xff\xe7\x05\x73\x11\x61\x04\x00\x00")

func bindataStaticPresenterjsBytes() ([]byte, error) {
	return bindataRead(
		_bindataStaticPresenterjs,
		"static/presenter.js",
	)
}



func bindataStaticPresenterjs() (*asset, error) {
	bytes, err := bindataStaticPresenterjsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "static/presenter.js",
		size: 1121,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1527266510, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataStaticSlidescss = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x92\x4d\x8e\x83\x30\x0c\x46\xf7\x39\x85\x0f\x10\xaa\xf2\xd3\x59\x04" +
	"\x69\xee\x92\x92\x80\xad\x86\x04\x85\xb4\x0c\x33\xe2\xee\x23\x52\x8a\x68\x61\x89\xe5\xf7\xec\x98\x0f\x43\x6b\xe0" +
	"\x8f\x01\xd4\xce\x86\xa4\xa7\x5f\x2d\x20\x7b\x0c\x25\x03\x68\xc9\x26\xa8\xa9\xc1\x20\x20\x3d\x9f\x1f\x38\x17\xdd" +
	"\x43\xfb\xda\xb8\x21\x19\x05\x20\x29\xa5\x6d\xc9\x26\xc6\x66\x0d\x87\xab\x53\x23\x07\x4c\x39\x60\xc6\x01\x73\x0e" +
	"\x58\x70\xc0\x0b\x07\xfc\xe2\xd0\xc5\x39\xad\xf4\x0d\x59\x01\xe7\xd9\xd6\x49\xa5\xc8\x36\xcb\x57\x5c\xa1\x96\x2d" +
	"\x99\x51\x40\x2f\x6d\x9f\xf4\xda\x53\x1d\x07\xcc\xea\xc8\xaf\x48\xea\x75\xbb\x71\x24\xc1\x75\xd1\x33\x6f\x73\xb8" +
	"\xc1\xfb\xf8\xd3\xc5\xeb\x76\xed\xff\x3c\x41\xbe\xc8\x0d\x59\xbd\x1e\xa1\x88\xc5\x89\x61\xb6\xbb\x58\xb4\xed\x80" +
	"\x7c\x29\x4f\x0c\xf3\x1d\x72\x08\xbc\xda\x8b\xcf\xf6\xf4\x78\x42\xb6\x4e\x60\x1d\x87\xbb\xe1\xe0\x0c\x07\x43\x3b" +
	"\xfc\x08\x4e\x37\x30\x7c\x03\xb5\x4d\xc4\x14\xf5\x9d\x91\xa3\x80\xab\x71\xd5\xad\xdc\x1e\x0d\xe4\x3d\xb8\xf5\x7f" +
	"\x9c\xac\x4b\x7a\x43\x4a\x47\x6c\x20\x15\xf0\x99\x94\x18\x9f\x5d\x74\xae\xb2\xba\x35\xde\xdd\xad\x9a\xd5\xf2\xa9" +
	"\xde\x26\x60\xfa\xb0\x3e\x03\xf3\xbe\xf2\x4b\x56\x39\xe3\xbc\x80\x01\x29\xe8\xf2\xfd\xad\xc5\xf2\xd6\xa0\x7f\x42" +
	"\x22\x0d\x35\x56\x40\xa5\x6d\xd0\x3e\x6e\xfe\x1f\x00\x00\xff\xff\x8f\x75\x65\xfa\xf2\x02\x00\x00")

func bindataStaticSlidescssBytes() ([]byte, error) {
	return bindataRead(
		_bindataStaticSlidescss,
		"static/slides.css",
	)
}



func bindataStaticSlidescss() (*asset, error) {
	bytes, err := bindataStaticSlidescssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "static/slides.css",
		size: 754,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1526907140, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataStaticSlidesjs = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\x3d\x8f\xe3\x36\x14\xec\xf7\x57\x0c\x54\xd9\xf0\xae\x6c\x1c\xe0" +
	"\xc2\xf0\x6a\x0f\x57\x04\xb8\x22\x48\x73\x45\x6a\x5a\x7c\x96\x88\xa5\xf9\x1c\x92\xb2\xe2\x04\xfe\xef\x01\xf5\x61" +
	"\x91\xda\x0f\xe4\x80\x20\x8d\x01\x3d\x3e\xce\x3c\xce\x8c\x68\x2d\x8e\x8d\x29\xbd\x62\xb3\x58\xe2\xef\x87\x07\xe0" +
	"\x22\x2c\x2c\x39\xf5\x17\x7d\x17\x46\x6a\xb2\x28\x90\xf4\x00\x7d\x53\xd9\x58\x4b\xc6\xff\xae\xa4\xaf\x51\x60\xbb" +
	"\xd9\xdf\x97\x3c\xf3\x8f\x93\xd0\x7a\x5c\x6b\x8c\xa4\xa3\x32\x24\x93\x96\x5f\x85\xad\xe8\x93\x16\x49\x4e\x59\x92" +
	"\xdf\x49\x55\xb5\x47\x81\x56\x19\xc9\x6d\xae\x8c\x21\xdb\x17\xdf\x32\xde\x9b\x3f\xa1\x7c\xaf\xa7\x6b\x5a\xaf\x51" +
	"\xb2\x71\xac\x29\x2f\x35\x09\xbb\x58\xee\xe7\x75\xcd\xd5\x22\x1b\x06\x43\x3d\x02\x65\x58\xa5\xd3\x0e\x1b\x8f\x6c" +
	"\xb1\x08\xd4\xca\x93\x15\x41\x41\x14\xd8\xec\xa3\xc7\xe7\xa0\xdb\xf4\xbc\x5a\x8d\x0a\x07\x56\x71\x3e\xeb\x6b\xa2" +
	"\xf3\xb0\xd4\x41\x9e\x44\x45\xbf\xb1\x24\x87\x02\x92\xcb\xe6\x44\xc6\xe7\x7f\x34\x64\xaf\x3f\x48\x53\xe9\xd9\x7e" +
	"\xd3\x7a\x91\x9d\xf1\x02\x75\xaa\xb2\x61\x24\xe0\x9b\xb5\xe2\x9a\x9f\x2d\x7b\xf6\xd7\x33\xe5\x47\xb6\xbf\x88\xb2" +
	"\xce\x4b\xa1\xf5\x62\x42\x7d\x9c\x5c\xbf\x17\xa7\xe1\x30\xf1\xe7\xce\x5f\x35\xe5\xed\x60\x64\x12\x8b\x15\xb2\x4b" +
	"\x9b\x8d\xcc\xb7\xe5\x20\x74\x38\x5c\x5b\x0b\x3f\x2a\x28\x99\x1c\x7c\x28\x9c\x2d\xcb\xa6\xa4\xaf\xd1\x41\x07\xc0" +
	"\xbb\x6b\xf7\xb3\x1e\x58\x5e\x73\x57\x5a\x1e\x6d\x1f\x79\xd4\x11\x8b\xd9\xae\x62\xe6\x4f\x74\x90\x83\x25\xf1\xba" +
	"\xc7\x7a\x7d\x21\x7b\x45\x63\xb4\x7a\x25\x7d\x1d\x47\xfe\x10\xf2\xf9\x63\xc4\x79\xfc\x63\x49\xf6\x6f\xba\xee\x07" +
	"\x4b\xf0\xa7\xbe\x88\xba\x07\x7c\x29\xb0\xdb\xc6\x7c\x41\xce\x13\x5b\x0a\x12\x1a\x88\x03\x37\x1e\xbb\xed\xa5\xee" +
	"\x75\x35\xec\x71\x12\xaf\x04\x47\xc6\xd1\x1e\xbe\xa6\xde\x3c\xb4\xdc\x68\x09\xbe\x90\x3d\x6a\x6e\xc1\xa6\x5b\xb3" +
	"\x81\x3e\xc2\xfe\x8f\xf2\xf2\x59\x66\xb2\xdd\x36\x8a\xc9\x18\x95\xe9\x29\x79\xfb\x0e\xdc\x18\x89\xc3\x15\xdd\xee" +
	"\x2c\x69\xec\xbd\xbc\x17\x46\xf7\x6e\x20\xed\x28\x75\x28\xb9\x7d\x3e\x74\x28\xbd\x30\xde\x75\xe8\x36\x65\x5a\x32" +
	"\x5a\x42\x2d\x2e\x04\xcf\xa0\x3f\xcf\x3a\xb8\xd2\x59\x23\x95\xa5\x4e\x1d\xf7\x35\x8a\xd4\x3c\x03\x45\x74\x29\xc5" +
	"\xe2\x25\xfe\x3f\x15\xf8\xb2\xf9\x24\x1f\xcf\xd8\xcc\xd3\x21\xdc\x99\x4a\x8f\xee\x92\x81\x72\xe1\x64\x68\x49\x59" +
	"\x89\xa7\x17\x1c\x84\xd2\xe0\xe6\xff\xf6\x7c\xbb\xf9\x09\xcf\x85\xd2\xca\x54\x61\xca\x9f\x31\x7c\x90\x38\x31\xf1" +
	"\xdf\x28\xbc\x8a\x15\x7e\x13\x9e\xf5\x7a\x34\xf9\xc0\xbe\x86\x98\xbd\xef\xc2\xc8\xbe\x36\x25\xec\x31\xda\xeb\x18" +
	"\x07\xe5\x82\x1b\x9e\x5b\x61\xa5\x83\x40\xc5\x2c\x71\x11\xba\xa1\xf7\xe7\x29\xa6\xa4\x8c\xf7\x6a\x82\xbf\xc4\x1a" +
	"\x5f\xde\xe4\x31\x51\x70\x91\xf5\x9b\x12\x90\x2c\xd8\x1f\x2f\x0c\x22\xad\x90\x2d\xf1\xd4\xad\xcc\xaf\x73\x3c\x61" +
	"\x84\x8a\xde\xa0\x14\x2a\xd6\x3b\x40\x65\xf1\xbd\xcf\xa6\xa4\x30\xda\x85\x6c\x45\xf2\x11\xce\xf3\x79\xfc\x03\x34" +
	"\xd5\x3b\xef\x46\xcf\xb0\x9e\x31\xbe\x60\x93\xef\x76\x89\x83\x49\x60\x42\x2e\x42\x62\x0e\x54\x8a\xc6\x45\x8c\x71" +
	"\x7e\x92\xf4\xf4\xd9\x09\xbf\xb7\x6e\xdc\xe4\x23\xa8\xff\x14\x18\xbe\x40\xd8\x68\x16\x12\x45\xda\x12\xfe\x42\xfa" +
	"\x42\x9f\x79\x07\x51\x09\x65\xd0\xd6\x64\x20\xb4\x1e\xab\x61\x2f\xc9\x18\x6d\xd8\x35\xc7\x7b\x78\xb8\x2d\x03\xef" +
	"\xc3\x3f\x01\x00\x00\xff\xff\x97\x56\x43\xee\xa4\x09\x00\x00")

func bindataStaticSlidesjsBytes() ([]byte, error) {
	return bindataRead(
		_bindataStaticSlidesjs,
		"static/slides.js",
	)
}



func bindataStaticSlidesjs() (*asset, error) {
	bytes, err := bindataStaticSlidesjsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "static/slides.js",
		size: 2468,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1527347241, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}


//
// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
//
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
// nolint: deadcode
//
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

//
// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or could not be loaded.
//
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// AssetNames returns the names of the assets.
// nolint: deadcode
//
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

//
// _bindata is a table, holding each asset generator, mapped to its name.
//
var _bindata = map[string]func() (*asset, error){
	"static/audience.css":  bindataStaticAudiencecss,
	"static/audience.js":   bindataStaticAudiencejs,
	"static/presenter.css": bindataStaticPresentercss,
	"static/presenter.js":  bindataStaticPresenterjs,
	"static/slides.css":    bindataStaticSlidescss,
	"static/slides.js":     bindataStaticSlidesjs,
}

//
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
//
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, &os.PathError{
					Op: "open",
					Path: name,
					Err: os.ErrNotExist,
				}
			}
		}
	}
	if node.Func != nil {
		return nil, &os.PathError{
			Op: "open",
			Path: name,
			Err: os.ErrNotExist,
		}
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}


type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{Func: nil, Children: map[string]*bintree{
	"static": {Func: nil, Children: map[string]*bintree{
		"audience.css": {Func: bindataStaticAudiencecss, Children: map[string]*bintree{}},
		"audience.js": {Func: bindataStaticAudiencejs, Children: map[string]*bintree{}},
		"presenter.css": {Func: bindataStaticPresentercss, Children: map[string]*bintree{}},
		"presenter.js": {Func: bindataStaticPresenterjs, Children: map[string]*bintree{}},
		"slides.css": {Func: bindataStaticSlidescss, Children: map[string]*bintree{}},
		"slides.js": {Func: bindataStaticSlidesjs, Children: map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
